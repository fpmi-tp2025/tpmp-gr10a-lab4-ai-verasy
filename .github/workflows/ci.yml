name: C/C++ CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          lcov \
          libsqlite3-dev \
          gcc \
          g++ \
          sqlite3
        
    - name: Configure project
      run: |
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug
        cmake --build build --target help  # Показывает список доступных целей
        
    - name: Build project
      run: cmake --build build --verbose
        
    - name: Run tests
      working-directory: ./build
      run: ctest --output-on-failure -V
        
    - name: Generate coverage report
      working-directory: ./build
      run: |
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info '/usr/*' '*/tests/*' --output-file coverage.info
        lcov --list coverage.info
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./build/coverage.info
        flags: unittests
        name: codecov-upload
        verbose: true

    - name: Verify SQLite database
      run: |
        sqlite3 build/auction.db "SELECT name FROM sqlite_master WHERE type='table';"
        sqlite3 build/auction.db "SELECT COUNT(*) FROM farms;"
